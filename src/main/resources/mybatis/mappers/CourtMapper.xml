<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.physical.movement.mapper.CourtMapper">
    <resultMap id="BaseResultMap" type="com.physical.movement.entity.Court">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="address" jdbcType="VARCHAR" property="address"/>
        <result column="costtime" jdbcType="INTEGER" property="costtime"/>
        <result column="cost" jdbcType="INTEGER" property="cost"/>
        <result column="tid" jdbcType="INTEGER" property="tid"/>
        <result column="teamname" jdbcType="VARCHAR" property="teamname"/>
        <result column="type" jdbcType="VARCHAR" property="type"/>
        <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate"/>
        <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, address, costtime, cost, type, tid , teamname, gmt_create, gmt_modified
    </sql>
    <sql id="WHERE_SELECT_CONDIYION">
        <where>
            1=1
            <if test="id!=null">
                and id = #{id}
            </if>
            <if test="address!=null and address!=''">
                and address like concat("%",#{address},"%")
            </if>
            <if test="gmtCreate!=null">
                and gmt_create > #{gmtCreate}
            </if>
        </where>
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from court
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectAll" parameterType="com.physical.movement.entity.Court" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from court
        <include refid="WHERE_SELECT_CONDIYION"/>
        order by gmt_create asc
    </select>

    <select id="select" parameterType="com.physical.movement.entity.Court" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from court
        <include refid="WHERE_SELECT_CONDIYION"/>
        order by gmt_modified asc
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from court
    where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.physical.movement.entity.Court">
    insert into court (id, address, costtime, 
      cost, type, tid, teamname, gmt_create,
      gmt_modified)
    values (#{id,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR}, #{costtime,jdbcType=INTEGER}, 
      #{cost,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR},#{tid},#{teamname} now(),
      now())
     </insert>
    <insert id="insertSelective" parameterType="com.physical.movement.entity.Court">
        insert into court
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="costtime != null">
                costtime,
            </if>
            <if test="cost != null">
                cost,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="tid != null">
                tid,
            </if>
            <if test="teamname != null">
                teamname,
            </if>
            <if test="gmtCreate != null">
                gmt_create,
            </if>
            <if test="gmtModified != null">
                gmt_modified,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="costtime != null">
                #{costtime,jdbcType=INTEGER},
            </if>
            <if test="cost != null">
                #{cost,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="tid != null">
                #{tid},
            </if>
            <if test="teamname != null">
                #{teamname,jdbcType=VARCHAR},
            </if>
            <if test="gmtCreate != null">
                #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            now(),
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.physical.movement.entity.Court">
        update court
        <set>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="costtime != null">
                costtime = #{costtime,jdbcType=INTEGER},
            </if>
            <if test="cost != null">
                cost = #{cost,jdbcType=INTEGER},
            </if>
            <if test="tid != null">
                tid = #{tid,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=VARCHAR},
            </if>
            <if test="teamname != null">
                teamname = #{teamname,jdbcType=VARCHAR},
            </if>
            now(),
            <if test="gmtCreate != null">
                gmt_create =#{gmtCreate,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <insert id="addListCourt" parameterType="List">
        insert into court(id,address,costtime,cost,type,tid,teamname,gmt_create,gmt_modified) values
        <foreach collection="courts" item="court" index="index" separator=",">
            (
            #{court.id},
            #{court.address},
            #{court.costtime},
            #{court.cost},
            #{court.type},
            #{court.tid},
            #{court.teamname},
            #{court.gmtCreate},
            now()
            )
        </foreach>
    </insert>
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.physical.movement.mapper.TeamMapper">
    <resultMap id="BaseResultMap" type="com.physical.movement.entity.Team">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="teamname" jdbcType="VARCHAR" property="teamname"/>
        <result column="teamemail" jdbcType="VARCHAR" property="teamemail"/>
        <result column="teamtype" jdbcType="INTEGER" property="teamtype"/>
        <result column="teamleader" jdbcType="VARCHAR" property="teamleader"/>
        <result column="teamleaderid" jdbcType="INTEGER" property="teamleaderid"/>
        <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate"/>
        <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified"/>
        <result column="flag" jdbcType="TINYINT" property="flag"/>
        <result column="reason" jdbcType="LONGVARCHAR" property="reason"/>
        <result column="cause" jdbcType="LONGVARCHAR" property="cause"/>
        <result column="intro" jdbcType="LONGVARCHAR" property="intro"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, teamname,teamemail, teamtype, teamleader, teamleaderid, gmt_create, gmt_modified, flag ,reason, cause,intro
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from team
        where id = #{id,jdbcType=INTEGER}
    </select>
    <sql id="WHERE_SELECT_CONDIYION">
        <where>
            1=1
            <if test="teamleaderid!=null">
                and teamleaderid = #{teamleaderid}
            </if>
            <if test="id!=null">
                and id = #{id}
            </if>
            <if test="teamtype!=null">
                and teamtype = #{teamtype}
            </if>
            <if test="flag!=null">
                and flag = #{flag}
            </if>
            <if test="teamname!=null and teamname!=''">
                and teamname like concat("%",#{teamname},"%")
            </if>
            <if test="teamleaderid!=null">
                and teamleaderid = teamleaderid
            </if>
        </where>
    </sql>
    <select id="selectAll" parameterType="com.physical.movement.entity.Team" resultType="team">
        select
        <include refid="Base_Column_List"/>
        from team
        <include refid="WHERE_SELECT_CONDIYION"/>
        order by gmt_modified desc,id desc
    </select>
    <select id="select" parameterType="com.physical.movement.entity.Team" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from team
        <include refid="WHERE_SELECT_CONDIYION"/>
        order by gmt_modified desc
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from team
    where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.physical.movement.entity.Team">
    insert into team (id,teamemail, teamname, teamtype,
      teamleader, teamleaderid, gmt_create, 
      gmt_modified, flag, reason, intro,
      cause)
    values (#{id,jdbcType=INTEGER},#{teamemail}, #{teamname,jdbcType=VARCHAR}, #{teamtype,jdbcType=INTEGER},
      #{teamleader,jdbcType=VARCHAR}, #{teamleaderid,jdbcType=INTEGER}, #{gmtCreate,jdbcType=TIMESTAMP},
      #{gmtModified,jdbcType=TIMESTAMP}, #{flag,jdbcType=TINYINT}, #{reason,jdbcType=LONGVARCHAR}, #{intro}
      #{cause,jdbcType=LONGVARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.physical.movement.entity.Team">
        insert into team
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="teamname != null">
                teamname,
            </if>
            <if test="teamtype != null">
                teamtype,
            </if>
            <if test="intro != null">
                intro,
            </if>
            <if test="teamleader != null">
                teamleader,
            </if>
            <if test="teameamil != null">
                teameamil,
            </if>
            <if test="teamleaderid != null">
                teamleaderid,
            </if>
            <if test="gmtCreate != null">
                gmt_create,
            </if>
            <if test="gmtModified != null">
                gmt_modified,
            </if>
            <if test="flag != null">
                flag,
            </if>
            <if test="reason != null">
                reason,
            </if>
            <if test="cause != null">
                cause,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="teamname != null">
                #{teamname,jdbcType=VARCHAR},
            </if>
            <if test="teamtype != null">
                #{teamtype,jdbcType=INTEGER},
            </if>
            <if test="intro != null">
                #{intro,jdbcType=LONGVARCHAR},
            </if>
            <if test="teamleader != null">
                #{teamleader,jdbcType=VARCHAR},
            </if>
            <if test="teamemail != null">
                #{teamemail,jdbcType=VARCHAR},
            </if>
            <if test="teamleaderid != null">
                #{teamleaderid,jdbcType=INTEGER},
            </if>
            <if test="gmtCreate != null">
                #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                #{gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="flag != null">
                #{flag,jdbcType=TINYINT},
            </if>
            <if test="reason != null">
                #{reason,jdbcType=LONGVARCHAR},
            </if>
            <if test="cause != null">
                #{cause,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.physical.movement.entity.Team">
        update team
        <set>
            <if test="teamname != null">
                teamname = #{teamname,jdbcType=VARCHAR},
            </if>
            <if test="teamtype != null">
                teamtype = #{teamtype,jdbcType=INTEGER},
            </if>
            <if test="teamleader != null">
                teamleader = #{teamleader,jdbcType=VARCHAR},
            </if>
            <if test="teamemail != null">
                teamemail = #{teamemail,jdbcType=VARCHAR},
            </if>
            <if test="teamleaderid != null">
                teamleaderid = #{teamleaderid,jdbcType=INTEGER},
            </if>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="flag != null">
                flag = #{flag,jdbcType=TINYINT},
            </if>
            <if test="reason != null">
                reason = #{reason,jdbcType=LONGVARCHAR},
            </if>
            <if test="cause != null">
                cause = #{cause,jdbcType=LONGVARCHAR},
            </if>
            <if test="intro != null">
                intro = #{intro,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.physical.movement.entity.Team">
    update team
    set teamname = #{teamname,jdbcType=VARCHAR},
      teamtype = #{teamtype,jdbcType=INTEGER},
      teamleader = #{teamleader,jdbcType=VARCHAR},
      teamemail = #{teamemail,jdbcType=VARCHAR},
      teamleaderid = #{teamleaderid,jdbcType=INTEGER},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      flag = #{flag,jdbcType=TINYINT},
      intro = #{intro,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
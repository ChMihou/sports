<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.physical.movement.mapper.TeamMapper">
  <resultMap id="BaseResultMap" type="com.physical.movement.entity.Team">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="teamname" jdbcType="VARCHAR" property="teamname" />
    <result column="teamtype" jdbcType="INTEGER" property="teamtype" />
    <result column="teamleader" jdbcType="INTEGER" property="teamleader" />
    <result column="teamleaderid" jdbcType="INTEGER" property="teamleaderid" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="flag" jdbcType="TINYINT" property="flag" />
    <result column="reason" jdbcType="LONGVARCHAR" property="reason" />
    <result column="cause" jdbcType="LONGVARCHAR" property="cause" />
  </resultMap>
  <sql id="Base_Column_List">
    id, teamname, teamtype, teamleader, teamleaderid, gmt_create, gmt_modified, flag ,reason, cause
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from team
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from team
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.physical.movement.entity.Team">
    insert into team (id, teamname, teamtype, 
      teamleader, teamleaderid, gmt_create, 
      gmt_modified, flag, reason, 
      cause)
    values (#{id,jdbcType=INTEGER}, #{teamname,jdbcType=VARCHAR}, #{teamtype,jdbcType=INTEGER}, 
      #{teamleader,jdbcType=INTEGER}, #{teamleaderid,jdbcType=INTEGER}, #{gmtCreate,jdbcType=TIMESTAMP}, 
      #{gmtModified,jdbcType=TIMESTAMP}, #{flag,jdbcType=TINYINT}, #{reason,jdbcType=LONGVARCHAR}, 
      #{cause,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.physical.movement.entity.Team">
    insert into team
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="teamname != null">
        teamname,
      </if>
      <if test="teamtype != null">
        teamtype,
      </if>
      <if test="teamleader != null">
        teamleader,
      </if>
      <if test="teamleaderid != null">
        teamleaderid,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
      <if test="flag != null">
        flag,
      </if>
      <if test="reason != null">
        reason,
      </if>
      <if test="cause != null">
        cause,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="teamname != null">
        #{teamname,jdbcType=VARCHAR},
      </if>
      <if test="teamtype != null">
        #{teamtype,jdbcType=INTEGER},
      </if>
      <if test="teamleader != null">
        #{teamleader,jdbcType=INTEGER},
      </if>
      <if test="teamleaderid != null">
        #{teamleaderid,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=TINYINT},
      </if>
      <if test="reason != null">
        #{reason,jdbcType=LONGVARCHAR},
      </if>
      <if test="cause != null">
        #{cause,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.physical.movement.entity.Team">
    update team
    <set>
      <if test="teamname != null">
        teamname = #{teamname,jdbcType=VARCHAR},
      </if>
      <if test="teamtype != null">
        teamtype = #{teamtype,jdbcType=INTEGER},
      </if>
      <if test="teamleader != null">
        teamleader = #{teamleader,jdbcType=INTEGER},
      </if>
      <if test="teamleaderid != null">
        teamleaderid = #{teamleaderid,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="flag != null">
        flag = #{flag,jdbcType=TINYINT},
      </if>
      <if test="reason != null">
        reason = #{reason,jdbcType=LONGVARCHAR},
      </if>
      <if test="cause != null">
        cause = #{cause,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.physical.movement.entity.Team">
    update team
    set teamname = #{teamname,jdbcType=VARCHAR},
      teamtype = #{teamtype,jdbcType=INTEGER},
      teamleader = #{teamleader,jdbcType=INTEGER},
      teamleaderid = #{teamleaderid,jdbcType=INTEGER},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      flag = #{flag,jdbcType=TINYINT},
      reason = #{reason,jdbcType=LONGVARCHAR},
      cause = #{cause,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.physical.movement.entity.Team">
    update team
    set teamname = #{teamname,jdbcType=VARCHAR},
      teamtype = #{teamtype,jdbcType=INTEGER},
      teamleader = #{teamleader,jdbcType=INTEGER},
      teamleaderid = #{teamleaderid,jdbcType=INTEGER},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      flag = #{flag,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
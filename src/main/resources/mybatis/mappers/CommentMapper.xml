<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.physical.movement.mapper.CommentMapper">
    <resultMap id="BaseResultMap" type="com.physical.movement.entity.Comment">
        <result column="id" jdbcType="INTEGER" property="id"/>
        <result column="Comment" jdbcType="VARCHAR" property="comment"/>
        <result column="cid" jdbcType="INTEGER" property="cid"/>
        <result column="cuid" jdbcType="INTEGER" property="cuid"/>
        <result column="apply" jdbcType="VARCHAR" property="apply"/>
        <result column="flag" jdbcType="INTEGER" property="flag"/>
        <result column="aboy" jdbcType="VARCHAR" property="aboy"/>
        <result column="advisoryid" jdbcType="INTEGER" property="advisoryid"/>
        <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
        <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    </resultMap>
    <insert id="insert" parameterType="com.physical.movement.entity.Comment">
    insert into comment (id, Comment, Cid,
      Cuid, apply, advisoryid,
      flag, aboy,gmt_create,gmt_modified)
    values (null, #{comment,jdbcType=VARCHAR}, #{cid,jdbcType=INTEGER},
      #{cuid,jdbcType=INTEGER}, #{apply,jdbcType=VARCHAR},#{advisoryid,jdbcType=INTEGER},
      #{flag,jdbcType=INTEGER}, #{aboy,jdbcType=VARCHAR}),now(),now())
    </insert>
    <sql id="Base_Column_List">
    id,cid, comment, advisoryid, cuid, apply, flag, aboy, gmt_create, gmt_modified
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from comment
        where id = #{id,jdbcType=INTEGER}
    </select>
    <sql id="WHERE_SELECT_CONDIYION">
        <where>
            1=1
            <if test="id!=null">
                and id = #{id}
            </if>
            <if test="cuid!=null">
                and cuid = #{cuid}
            </if>
        </where>
    </sql>
    <select id="selectAll" parameterType="com.physical.movement.entity.Comment" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from comment
        <include refid="WHERE_SELECT_CONDIYION"/>
        order by gmt_create desc,id desc
    </select>
    <select id="selectAllCommentUser" parameterType="com.physical.movement.entity.Comment" resultType="com.physical.movement.entity.vo.UserCommentVo">
        select a.username,a.usertype,a.image,b.*
        from sysuser a,comment b,advisory c
        where b.cuid=a.id and b.advisoryid = c.id and b.advisoryid = #{advisoryid}
        order by gmt_create desc,id desc
    </select>
    <select id="select" parameterType="com.physical.movement.entity.Comment" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from comment
        <include refid="WHERE_SELECT_CONDIYION"/>
        order by gmt_create desc
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insertSelective" parameterType="com.physical.movement.entity.Comment">
        insert into comment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="comment != null">
                comment,
            </if>
            <if test="advisoryid != null">
                advisoryid,
            </if>
            <if test="cuid != null">
                cuid,
            </if>
            <if test="apply != null">
                apply,
            </if>
            <if test="flag != null">
                flag,
            </if>
            <if test="aboy != null">
                aboy,
            </if>
                gmt_create,
                gmt_modified
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="comment != null">
                #{comment,jdbcType=VARCHAR},
            </if>
            <if test="advisoryid != null">
                #{advisoryid,jdbcType=INTEGER},
            </if>
            <if test="cuid != null">
                #{cuid,jdbcType=INTEGER},
            </if>
            <if test="apply != null">
                #{apply,jdbcType=VARCHAR},
            </if>
            <if test="flag != null">
                #{flag,jdbcType=INTEGER},
            </if>
            <if test="aboy != null">
                #{aboy,jdbcType=VARCHAR},
            </if>
                now(),
                now(),
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.physical.movement.entity.Comment">
        update comment
        <set>
            <if test="comment != null">
                comment = #{comment,jdbcType=VARCHAR},
            </if>
            <if test="advisoryid != null">
                advisoryid = #{advisoryid,jdbcType=INTEGER},
            </if>
            <if test="cuid != null">
                cuid = #{cuid,jdbcType=INTEGER},
            </if>
            <if test="apply != null">
                apply = #{apply,jdbcType=VARCHAR},
            </if>
            <if test="flag != null">
                flag = #{flag,jdbcType=INTEGER},
            </if>
            <if test="aboy != null">
                aboy = #{aboy,jdbcType=VARCHAR},
            </if>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
                gmt_modified = now(),
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="selectCount" resultType="INTEGER">
        SELECT COUNT(1) FROM comment;
    </select>

    <delete id="deleteListId" parameterType="int[]">
        <!-- forEach : 用来循环 collection : 用来指定循环的数据的类型 可以填的值有：array,list,map item
            : 循环中为每个循环的数据指定一个别名 index : 循环中循环的下标 open : 开始 close : 结束 separator : 数组中元素之间的分隔符 -->
        delete from comment where id in
        <foreach collection="ids" item="id" index="no" open="("
                 separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>